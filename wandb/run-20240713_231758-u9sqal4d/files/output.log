Overriding model.yaml nc=80 with nc=1
                 from  n    params  module                                  arguments
  0                -1  1      3520  models.common.Conv                      [3, 32, 6, 2, 2]
  1                -1  1     18560  models.common.Conv                      [32, 64, 3, 2]
  2                -1  1     18816  models.common.C3                        [64, 64, 1]
  3                -1  1     73984  models.common.Conv                      [64, 128, 3, 2]
  4                -1  2    115712  models.common.C3                        [128, 128, 2]
  5                -1  1    295424  models.common.Conv                      [128, 256, 3, 2]
  6                -1  3    625152  models.common.C3                        [256, 256, 3]
  7                -1  1   1180672  models.common.Conv                      [256, 512, 3, 2]
  8                -1  1   1182720  models.common.C3                        [512, 512, 1]
  9                -1  1    656896  models.common.SPPF                      [512, 512, 5]
 10                -1  1    131584  models.common.Conv                      [512, 256, 1, 1]
 11                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']
 12           [-1, 6]  1         0  models.common.Concat                    [1]
 13                -1  1    361984  models.common.C3                        [512, 256, 1, False]
 14                -1  1     33024  models.common.Conv                      [256, 128, 1, 1]
 15                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']
 16           [-1, 4]  1         0  models.common.Concat                    [1]
 17                -1  1     90880  models.common.C3                        [256, 128, 1, False]
 18                -1  1    147712  models.common.Conv                      [128, 128, 3, 2]
 19          [-1, 14]  1         0  models.common.Concat                    [1]
 20                -1  1    296448  models.common.C3                        [256, 256, 1, False]
 21                -1  1    590336  models.common.Conv                      [256, 256, 3, 2]
 22          [-1, 10]  1         0  models.common.Concat                    [1]
 23                -1  1   1182720  models.common.C3                        [512, 512, 1, False]
 24      [17, 20, 23]  1     16182  models.yolo.Detect                      [1, [[10, 13, 16, 30, 33, 23], [30, 61, 62, 45, 59, 119], [116, 90, 156, 198, 373, 326]], [128, 256, 512]]
Model summary: 214 layers, 7022326 parameters, 7022326 gradients, 15.9 GFLOPs
Transferred 343/349 items from yolov5s.pt
[34m[1mAMP: [39m[22mchecks passed
[34m[1moptimizer:[39m[22m SGD(lr=0.01) with parameter groups 57 weight(decay=0.0), 60 weight(decay=0.0004921875), 60 bias
[34m[1mtrain: [39m[22mScanning D:\Github\DeepShadow\tele_datasets\mixed\train\labels.cache... 800 images, 0 backgrounds, 0 corrupt: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 800/800 [00:00<?, ?it/s]

[34m[1mtrain: [39m[22mCaching images (2.3GB ram): 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 800/800 [00:01<00:00, 725.08it/s]
[34m[1mval: [39m[22mScanning D:\Github\DeepShadow\tele_datasets\mixed\validation\labels.cache... 200 images, 0 backgrounds, 0 corrupt: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 200/200 [00:00<?, ?it/s]
[34m[1mval: [39m[22mCaching images (0.6GB ram): 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 200/200 [00:00<00:00, 659.56it/s]
[34m[1mAutoAnchor: [39m[22m2.05 anchors/target, 0.929 Best Possible Recall (BPR). Anchors are a poor fit to dataset , attempting to improve...
[34m[1mAutoAnchor: [39m[22mRunning kmeans for 9 anchors on 12800 points...
[34m[1mAutoAnchor: [39m[22mWARNING  switching strategies from kmeans to random init
100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 1000/1000 [00:01<00:00, 856.74it/s]
[34m[1mAutoAnchor: [39m[22mthr=0.25: 0.0000 best possible recall, 0.00 anchors past thr
[34m[1mAutoAnchor: [39m[22mn=9, img_size=1024, metric_all=0.017/0.037-mean/best, past_thr=nan-mean: 142,231, 235,295, 401,457, 505,563, 648,721, 741,775, 850,863, 891,902, 975,995
[34m[1mAutoAnchor: [39m[22mDone  (original anchors better than new anchors, proceeding with original anchors)
Plotting labels to runs\train\results_16\labels.jpg...
Image sizes 1024 train, 1024 val
Using 3 dataloader workers
Logging results to [1mruns\train\results_16
Starting training for 300 epochs...
      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size
  0%|          | 0/267 [00:01<?, ?it/s]
Traceback (most recent call last):
  File "d:\Github\DeepShadow\yolov5\train.py", line 836, in <module>
    main(opt)
  File "d:\Github\DeepShadow\yolov5\train.py", line 616, in main
    train(opt.hyp, opt, device, callbacks)
  File "d:\Github\DeepShadow\yolov5\train.py", line 389, in train
    torch.nn.utils.clip_grad_norm_(model.parameters(), max_norm=10.0)  # clip gradients
  File "C:\Users\fangy\miniconda3\envs\normal\lib\site-packages\torch\nn\utils\clip_grad.py", line 61, in clip_grad_norm_
    total_norm = torch.linalg.vector_norm(torch.stack([norm.to(first_device) for norm in norms]), norm_type)
RuntimeError: CUDA error: unknown error
CUDA kernel errors might be asynchronously reported at some other API call, so the stacktrace below might be incorrect.
For debugging consider passing CUDA_LAUNCH_BLOCKING=1.
Compile with `TORCH_USE_CUDA_DSA` to enable device-side assertions.
Traceback (most recent call last):
  File "d:\Github\DeepShadow\yolov5\train.py", line 836, in <module>
    main(opt)
  File "d:\Github\DeepShadow\yolov5\train.py", line 616, in main
    train(opt.hyp, opt, device, callbacks)
  File "d:\Github\DeepShadow\yolov5\train.py", line 389, in train
    torch.nn.utils.clip_grad_norm_(model.parameters(), max_norm=10.0)  # clip gradients
  File "C:\Users\fangy\miniconda3\envs\normal\lib\site-packages\torch\nn\utils\clip_grad.py", line 61, in clip_grad_norm_
    total_norm = torch.linalg.vector_norm(torch.stack([norm.to(first_device) for norm in norms]), norm_type)
RuntimeError: CUDA error: unknown error
CUDA kernel errors might be asynchronously reported at some other API call, so the stacktrace below might be incorrect.
For debugging consider passing CUDA_LAUNCH_BLOCKING=1.
Compile with `TORCH_USE_CUDA_DSA` to enable device-side assertions.